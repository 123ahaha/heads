# Configuration for a Winterfell OCP node
# and it uses LinuxBoot, not coreboot.
CONFIG_LINUXBOOT=y
CONFIG_LINUXBOOT_ROM=blobs/winterfell.rom
CONFIG_LINUX_CONFIG=config/linux-linuxboot.config

# If you want to build with the go-based u-root instead of
# everything else.  Note that turning this on will turn off
# all of the other build tools.
CONFIG_UROOT=y

CONFIG_CRYPTSETUP=y
CONFIG_FLASHROM=y
#CONFIG_GPG=y
CONFIG_KEXEC=y
CONFIG_UTIL_LINUX=y
CONFIG_LVM2=y
#CONFIG_MBEDTLS=y
CONFIG_PCIUTILS=y
CONFIG_POPT=y
#CONFIG_QRENCODE=y
#CONFIG_TPMTOTP=y
#CONFIG_XEN=y
CONFIG_DROPBEAR=y

# Linux modules will still be linked into the u-root tree
CONFIG_LINUX_USB=y
CONFIG_LINUX_MLX4=y
CONFIG_LINUX_ATA=y
CONFIG_LINUX_AHCI=y
CONFIG_LINUX_E1000E=y

CONFIG_BOOTSCRIPT=/bin/generic-init

CONFIG_BOOT_REQ_HASH=n
CONFIG_BOOT_REQ_ROLLBACK=n
CONFIG_BOOT_DEV="/dev/sda1"
CONFIG_USB_BOOT_DEV="/dev/sdb1"

$(build)/$(BOARD)/linuxboot.rom: linuxboot.intermediate

# No 0x on these since the flasher doesn't handle that
dxe_offset := 860000
dxe_size := 6a0000
flash-dxe: $(build)/$(BOARD)/linuxboot.rom
	( echo u$(dxe_offset) $(dxe_size) ; \
	pv $(build)/linuxboot-git/build/$(BOARD)/dxe.vol \
	) > /dev/ttyACM0

flash: $(build)/$(BOARD)/linuxboot.rom
	( echo u0 1000000 ; \
	pv $< \
	) > /dev/ttyACM0
